root = true

[*.cs]

# for csharp_style_oc_* settings, the following conventions are followed during parsing:
# For array-type (sort-order) settings:
# 1. parsed left-to-right.
# 2. comma-separated
# 3. white space and '_' characters are removed during parsing, e.g. "member_kind" == "member kind" == "memberkind"
# 4. case-insensitive
# 5. Duplicates are ignored (first instance wins)
# 6. Missing value behavior is controlled by the csharp_style_oc_add_missing_order_values setting.

# The order in which members are sorted according to their accessibility.
# Default = public,internal,protected internal,protected,private protected,private
csharp_style_oc_accessibility = public,internal,protected internal,protected,private protected,private

# Defines how missing values in sort order settings are handled.
# If true, then the missing values are appended in default relative order.
# If false, then the missing values are ommitted (that sort does not happen).
csharp_style_oc_add_missing_order_values = true

# The order in which members are sorted according to their allocation modifier. "instance" = no modifier; the default.
# Default = const,static,instance
csharp_style_oc_allocation_modifiers = const,static,instance

# The order in which kinds of members are sorted.
# Default = field,constructor,event,property,operator,method,type
csharp_style_oc_member_kinds = field,constructor,event,property,operator,method,type

# The order in which operators are sorted.
# Default = conversion,unary,binary
csharp_style_oc_operators = conversion,unary,binary

# The order in which binary operators are sorted.
# Default = +, -, *, /, %, &, |, ^, <<, >>
csharp_style_oc_binary_operators = +,-,*,/,%,&,|,^,<<,>>,parameter

# The order in which conversion operators are sorted.
# Default = implicit,explicit
csharp_style_oc_conversion_operators = implicit,explicit

# The order in which unary operators are sorted.
# Default = +, -, !, ~, ++, --, true, false
csharp_style_oc_unary_operators = +,-,!,~,++,--,true,false

# The order in which members are sorted according to their parameters.
# count = number of parameters (ascending)
# types = lexicographical by parameter type name
# Default = count,types
csharp_style_oc_parameters = count,types

# The order in which strategies are applied.
# Default = member_kinds,accessibility,allocation_modifiers,name,parameters,return_type
csharp_style_oc_members = member_kinds,accessibility,allocation_modifiers,name,parameters,return_type

# The order in which types are sorted at the file level and when nested inside another type.
# Default = delegate,enum,interface,struct,record,class,name
csharp_style_oc_types = delegate,enum,interface,struct,record_struct,record,class,name

# Diagnostic severity settings

## OC1000: Types should be sorted correctly in the file.
dotnet_diagnostic.OC1000.severity = warning

## OC1001: Nested types should be sorted correctly within their containing types.
dotnet_diagnostic.OC1001.severity = warning

## OC1002: Type members should be sorted correctly.
dotnet_diagnostic.OC1002.severity = warning

## OC1003: Operators should be sorted correctly.
dotnet_diagnostic.OC1003.severity = warning
